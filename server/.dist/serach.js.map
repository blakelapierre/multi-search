{"version":3,"sources":["serach.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;IAAA,MAAM,SAAS,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;IAEvC,uCAAgC;IAEhC,MAAM,QAAQ,GAAQ,EAAE,CAAC;IAEzB,kBAAe,CAAO,KAAK,GAAG,MAAM,EAAE,cAAc,EAAE,EAAE;QACtD,MAAM,OAAO,GAAG,MAAM,SAAS,CAAC,MAAM,EAAE,EAClC,OAAO,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC,EAChE,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAC,IAAI,EAAE,OAAO,EAAC,EAAE,CAAC,EAAE,EAAE;YAC1C,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAC,GAAG,EAAC,EAAE,CAAC,EAAE,EAAE;gBACvC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;gBAC9C,MAAM,CAAC,IAAI,CAAC;YACd,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,EAAE,EAAE,CAAC,CAAC;QAEvB,MAAM,CAAC,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC;IACzB,CAAC,CAAA,CAAC;IAEF,gBAAgB,KAAK,EAAE,OAAO,EAAE,cAAc;QAC5C,MAAM,CAAC,iBAAO,CAAC,GAAG,CAAC,CAAO,EAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAC,EAAE,EAAE;YACvD,MAAM,IAAI,GAAG,MAAM,OAAO,CAAC,OAAO,EAAE,CAAC;YAErC,qFAAqF;YAErF,MAAM,IAAI,CAAC,IAAI,CAAC,GAAG,QAAQ,GAAG,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAElD,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;YAE/C,cAAc,CAAC,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC,CAAC;YAEhC,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC;YAEnB,MAAM,CAAC,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC;QACzB,CAAC,CAAA,CAAC,CAAC;IACL,CAAC;IAED,MAAM,OAAO,GAAG,CAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,MAAM,GAAG,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE;QAChG,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC7B,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QAC5D,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC,CAAC,CAAA;;AAEF,qCAAqC;AACrC,2CAA2C;AAC3C,oCAAoC;AACpC,kEAAkE;AAClE,QAAQ;AACR,2CAA2C;AAC3C,8DAA8D;AAC9D,qBAAqB;AACrB,YAAY;AACZ,IAAI","file":"serach.js","sourcesContent":["const puppeteer = require('puppeteer');\n\nimport engines from './engines';\n\nconst document: any = {};\n\nexport default async (query = 'test', partialResults) => {\n  const browser = await puppeteer.launch(),\n        results = await Promise.all(search(query, browser, partialResults)),\n           urls = results.reduce((urls, {name, results}, i) => {\n                    return results.reduce((urls, {url}, i) => {\n                      (urls[url] = urls[url] || []).push([name, i]);\n                      return urls;\n                    }, urls);\n                  }, {});\n\n  return {urls, results};\n};\n\nfunction search(query, browser, partialResults) {\n  return engines.map(async ({name, queryUrl, evaluator}) => {\n    const page = await browser.newPage();\n    \n    // page.on('console', ({args}) => console.log(`${name} console: ${args.join(' ')}`));\n\n    await page.goto(`${queryUrl}${encodeURI(query)}`);\n    \n    const results = await page.evaluate(evaluator);\n  \n    partialResults({name, results});\n  \n    await page.close();\n\n    return {name, results};\n  });\n}\n\nconst groupBy = (list, selector, transform = a => a, groups = {}) => list.reduce((groups, item) => {\n  const value = selector(item);\n  (groups[value] = groups[value] || []).push(transform(item));\n  return groups;\n})\n\n// function groupBy(list, property) {\n//   return list.reduce((groups, item) => {\n//     const value = selector(item);\n//     (groups[value] = groups[value] || []).push(transform(item))\n//   });\n//   return list.reduce((groups, item) => {\n//     (groups[property] = groups[property] || []).push(item);\n//     return groups;\n//   }, {});\n// }"]}